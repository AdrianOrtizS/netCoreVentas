// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema.Datos;

namespace Sistema.Datos.Migrations
{
    [DbContext(typeof(DbContextSistema))]
    [Migration("20210718032153_2")]
    partial class _2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sistema.Entidades.Articulo", b =>
                {
                    b.Property<int>("idarticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idcategoria")
                        .HasColumnType("int");

                    b.Property<bool>("iva")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("precio_compra")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("precio_venta")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<int>("utilidad")
                        .HasColumnType("int");

                    b.HasKey("idarticulo");

                    b.HasIndex("idcategoria");

                    b.ToTable("articulo");
                });

            modelBuilder.Entity("Sistema.Entidades.Articulo_TipoArticulo", b =>
                {
                    b.Property<int>("idarticulo")
                        .HasColumnType("int");

                    b.Property<int>("idtipoArticulo")
                        .HasColumnType("int");

                    b.HasKey("idarticulo", "idtipoArticulo");

                    b.HasIndex("idtipoArticulo");

                    b.ToTable("articulo_tipoArticulo");
                });

            modelBuilder.Entity("Sistema.Entidades.Categoria", b =>
                {
                    b.Property<int>("idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("idcategoria");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Sistema.Entidades.Configuracion", b =>
                {
                    b.Property<int>("idconfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idconfiguracion");

                    b.ToTable("configuracion");
                });

            modelBuilder.Entity("Sistema.Entidades.DetalleIngreso", b =>
                {
                    b.Property<int>("iddetalle_ingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idarticulo")
                        .HasColumnType("int");

                    b.Property<int>("idingreso")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_compra")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("iddetalle_ingreso");

                    b.HasIndex("idarticulo");

                    b.HasIndex("idingreso");

                    b.ToTable("detalle_ingreso");
                });

            modelBuilder.Entity("Sistema.Entidades.DetalleVenta", b =>
                {
                    b.Property<int>("iddetalle_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("descuento")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("idarticulo")
                        .HasColumnType("int");

                    b.Property<int>("idventa")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_venta")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("iddetalle_venta");

                    b.HasIndex("idarticulo");

                    b.HasIndex("idventa");

                    b.ToTable("detalle_venta");
                });

            modelBuilder.Entity("Sistema.Entidades.Ingreso", b =>
                {
                    b.Property<int>("idingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.Property<decimal>("impuesto0")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("impuesto12")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("num_comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie_comprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("idingreso");

                    b.HasIndex("idproveedor");

                    b.HasIndex("idusuario");

                    b.ToTable("ingreso");
                });

            modelBuilder.Entity("Sistema.Entidades.Persona", b =>
                {
                    b.Property<int>("idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("num_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpersona");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Sistema.Entidades.Rol", b =>
                {
                    b.Property<int>("idrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("idrol");

                    b.ToTable("rol");

                    b.HasData(
                        new
                        {
                            idrol = 1,
                            condicion = true,
                            descripcion = "Administrador de sitio",
                            nombre = "Administrador"
                        },
                        new
                        {
                            idrol = 2,
                            condicion = true,
                            descripcion = "Vendedor de sitio",
                            nombre = "Vendedor"
                        },
                        new
                        {
                            idrol = 3,
                            condicion = true,
                            descripcion = "Almacenero de sitio",
                            nombre = "Almacenero"
                        });
                });

            modelBuilder.Entity("Sistema.Entidades.TipoArticulo", b =>
                {
                    b.Property<int>("idTipoArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("tipoArticulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoArticulo");

                    b.ToTable("tipoArticulo");
                });

            modelBuilder.Entity("Sistema.Entidades.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion")
                        .HasColumnType("bit");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idrol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("num_documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password_hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password_salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_documento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idusuario");

                    b.HasIndex("idrol");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            idusuario = 1,
                            condicion = true,
                            direccion = "Magdalena",
                            email = "adrian-2222@hotmail.com",
                            foto = "",
                            idrol = 1,
                            nombre = "Adrian Ortiz",
                            num_documento = "1718348053",
                            password_hash = new byte[] { 217, 195, 179, 138, 110, 192, 162, 19, 55, 157, 45, 138, 16, 161, 0, 112, 12, 54, 169, 81, 255, 106, 101, 171, 101, 94, 164, 74, 46, 231, 40, 238, 196, 104, 41, 146, 28, 21, 95, 180, 128, 59, 3, 236, 133, 188, 198, 54, 27, 200, 187, 70, 87, 11, 106, 190, 195, 78, 51, 28, 9, 1, 103, 233 },
                            password_salt = new byte[] { 181, 75, 154, 220, 218, 75, 10, 52, 0, 232, 84, 149, 230, 155, 101, 181, 18, 130, 112, 16, 82, 211, 235, 144, 12, 32, 128, 29, 195, 181, 11, 124, 128, 20, 110, 40, 221, 50, 150, 227, 130, 115, 153, 84, 64, 92, 236, 60, 208, 162, 5, 14, 39, 251, 195, 145, 85, 103, 188, 104, 90, 88, 128, 97, 168, 35, 83, 104, 164, 50, 81, 85, 65, 121, 239, 222, 251, 122, 67, 8, 0, 94, 162, 184, 231, 207, 127, 201, 195, 128, 179, 45, 119, 217, 94, 146, 173, 172, 138, 95, 181, 244, 37, 116, 152, 42, 75, 198, 44, 186, 182, 93, 239, 222, 92, 66, 3, 93, 6, 158, 124, 58, 19, 35, 204, 107, 139, 215 },
                            telefono = "0983740668",
                            tipo_documento = "Cedula"
                        });
                });

            modelBuilder.Entity("Sistema.Entidades.Venta", b =>
                {
                    b.Property<int>("idventa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("descuento")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.Property<decimal>("impuesto0")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("impuesto12")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("num_comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie_comprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("idventa");

                    b.HasIndex("idcliente");

                    b.HasIndex("idusuario");

                    b.ToTable("venta");
                });

            modelBuilder.Entity("Sistema.Entidades.Articulo", b =>
                {
                    b.HasOne("Sistema.Entidades.Categoria", "categoria")
                        .WithMany("articulos")
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Sistema.Entidades.Articulo_TipoArticulo", b =>
                {
                    b.HasOne("Sistema.Entidades.Articulo", "articulo")
                        .WithMany("Art_TipoArt")
                        .HasForeignKey("idarticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Entidades.TipoArticulo", "tipoArticulo")
                        .WithMany("Art_TipoArt")
                        .HasForeignKey("idtipoArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("articulo");

                    b.Navigation("tipoArticulo");
                });

            modelBuilder.Entity("Sistema.Entidades.DetalleIngreso", b =>
                {
                    b.HasOne("Sistema.Entidades.Articulo", "articulo")
                        .WithMany("detalles")
                        .HasForeignKey("idarticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Entidades.Ingreso", "ingreso")
                        .WithMany("detalles")
                        .HasForeignKey("idingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("articulo");

                    b.Navigation("ingreso");
                });

            modelBuilder.Entity("Sistema.Entidades.DetalleVenta", b =>
                {
                    b.HasOne("Sistema.Entidades.Articulo", "articulo")
                        .WithMany()
                        .HasForeignKey("idarticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Entidades.Venta", "venta")
                        .WithMany("detalles")
                        .HasForeignKey("idventa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("articulo");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("Sistema.Entidades.Ingreso", b =>
                {
                    b.HasOne("Sistema.Entidades.Persona", "persona")
                        .WithMany("ingresos")
                        .HasForeignKey("idproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Entidades.Usuario", "usuario")
                        .WithMany("ingresos")
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Sistema.Entidades.Usuario", b =>
                {
                    b.HasOne("Sistema.Entidades.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("idrol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Sistema.Entidades.Venta", b =>
                {
                    b.HasOne("Sistema.Entidades.Persona", "persona")
                        .WithMany("ventas")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Entidades.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Sistema.Entidades.Articulo", b =>
                {
                    b.Navigation("Art_TipoArt");

                    b.Navigation("detalles");
                });

            modelBuilder.Entity("Sistema.Entidades.Categoria", b =>
                {
                    b.Navigation("articulos");
                });

            modelBuilder.Entity("Sistema.Entidades.Ingreso", b =>
                {
                    b.Navigation("detalles");
                });

            modelBuilder.Entity("Sistema.Entidades.Persona", b =>
                {
                    b.Navigation("ingresos");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("Sistema.Entidades.Rol", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("Sistema.Entidades.TipoArticulo", b =>
                {
                    b.Navigation("Art_TipoArt");
                });

            modelBuilder.Entity("Sistema.Entidades.Usuario", b =>
                {
                    b.Navigation("ingresos");
                });

            modelBuilder.Entity("Sistema.Entidades.Venta", b =>
                {
                    b.Navigation("detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
